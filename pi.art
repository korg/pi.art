#!/bin/sh



echo "###############"
echo "Starting pi.art"
echo "###############"

ismac="n"
ispi="n"
YES="y"
if [ -d /Applications ]; then ismac="$YES"; fi
if [ -e /bin/rpi-update ]; then ispi="$YES"; fi
echo "##  HOST  ismac:$ismac  ispi:$ispi"


SCRIPT_NAME=`basename "$0"`
SCRIPT_DIR=`dirname "$0"`
cd "$SCRIPT_DIR"
SCRIPT_DIR=`pwd`
echo "#   script_dir   $SCRIPT_DIR"
echo "#   script_name  $SCRIPT_NAME"

chmod +x "$SCRIPT_DIR/$SCRIPT_NAME"


IP_STORE=".pi.ip.conf"
echo "#   ip_store  $IP_STORE"

PI_USER="media"
PI_DIR="Videos/."


PI_IP="--on-raspberry-pi--"

if [ "$ispi" = "$YES" ]; then
  echo "#   IM ON: PI"
elif [ "$ismac" = "$YES" ]; then
  echo "#   IM ON: MAC"
  if [ ! -e "$IP_STORE" ]; then
    echo "Please type in ip address of raspberry pi (num.num.num.num)"
    NEWIP=""
    while [ "$NEWIP" = "" ]; do
      /bin/echo -n "IP address:: "
      read tmpip
      echo "i got $tmpip checking..."
      echo "$tmpip" | grep -oE "^([0-9]{1,3}\.){3}[0-9]{1,3}$"
      ISOK="$?"
      echo "is valid ip result is $ISOK"
      if [ "$ISOK" = "0" ]; then
        echo "$tmpip" > "$IP_STORE"
      NEWIP="$tmpip"
      fi
    done
    PI_IP="$NEWIP"
  else
    PI_IP=`cat "$IP_STORE"`
    echo "#   pi remote    $PI_USER@$PI_IP:$PI_DIR"
  fi
fi


run_vlc()
{
echo "im in run_vls [$*]"
echo "building playlist"
ls -a | grep -v "$SCRIPT_NAME" > playlist.m3u
cat playlist.m3u
sleep 1
DISPLAY=:0 vlc $* --fullscreen playlist.m3u
}


echo "###### running $*"

case "$1" in
  sync)
    echo "#  should rsync"
    echo rsync -aviP --delete --exclude="/$IP_STORE" "$SCRIPT_DIR/." "$PI_USER@$PI_IP:Videos/."
    rsync -aviPp --delete -v --exclude="/$IP_STORE" "$SCRIPT_DIR/." "$PI_USER@$PI_IP:Videos/."
    ;;
  install)
    echo "#  should install"
    echo calling ssh "$PI_USER@$PI_IP" sh "$PI_DIR/$SCRIPT_NAME" piinstall
    ssh "$PI_USER@$PI_IP" sh -x "$PI_DIR/$SCRIPT_NAME" pi_install
    ;;
  forget)
    echo "#  forgetting PI address"
    if [ -e "$SCRIPT_DIR/$IP_STORE" ]; then
      rm "$SCRIPT_DIR/$IP_STORE"
      echo "#  [ $SCRIPT_DIR/$IP_STORE ] deleted"
    else
      echo "ERROR: couldnt find pi address file [ $SCRIPT_DIR/$IP_STORE ]"
    fi
    ;;

  playloop)
    echo "#  should run once"
    ssh "$PI_USER@$PI_IP" sh -x "$PI_DIR/$SCRIPT_NAME" pi_playloop \&
    ;;
  playonce)
    echo "#  should run once"
    ssh "$PI_USER@$PI_IP" sh -x "$PI_DIR/$SCRIPT_NAME" pi_playonce
    ;;
  kill)
    ssh "$PI_USER@$PI_IP" sh -x "$PI_DIR/$SCRIPT_NAME" pi_kill
    ;;
  ssh)
    echo "#  ssh'ing into pi as  ${PI_USER}@${PI_IP}"
    ssh "$PI_USER@$PI_IP"
    ;;
  reboot)
    echo "connecting to pi, on pi doing reboot"
    ssh "$PI_USER@$PI_IP" sudo reboot
    ;;


  pi_install)
    if [ "$ispi" = "$YES" ]; then
      echo "on pi doing install"
      mkdir -p ~/.config/lxsession/LXDE-pi/
      ls -l ~/.config/lxsession/LXDE-pi/
      #echo /bin/sh "$SCRIPT_DIR/$SCRIPT_NAME" pi_playloop > ~/.config/lxsession/LXDE-pi/autostart
      cat > ~/.config/autostart/piart.desktop << EOM
[Desktop Entry]
Type=Application
Exec=/home/korg/Videos/pi.art pi_playloop
EOM
    else
      echo "ERROR:  not on pi for pi_install"
    fi
    ;;

  pi_playloop)
    if [ "$ispi" = "$YES" ]; then
      echo "running run_vlc for playloop"
      date > /tmp/piart.log
      date >> /tmp/piart.log
      sleep 2
      run_vlc -L
    else
      echo "ERROR:  not on pi for pi_playloop"
    fi
    ;;

  pi_playonce)
    if [ "$ispi" = "$YES" ]; then
      echo "running run_vlc for playonce"
      run_vlc
    else
      echo "ERROR:  not on pi for pi_playonce"
    fi
    ;;

  pi_kill)
    if [ "$ispi" = "$YES" ]; then
      echo "running pkill vlc"
      pkill vlc
    else
      echo "ERROR:  not on pi for pi_kill"
    fi
    ;;


  help|--help)
    echo "should help"
    echo "  [on MAC]  sync     (copy this folder  mac => pi)"
    echo "  [on MAC]  install  (remote to pi, runs pi_install)"
    echo "  [on MAC]  forget   (removes stored pi address)"
    echo ""
    echo "  [on MAC]  playloop (remote to pi, runs pi_play_loop)"
    echo "  [on MAC]  playonce (remote to pi, runs pi_play_once)"
    echo "  [on MAC]  kill     (remote to pi, stops playing)"
    echo "  [on MAC]  ssh      (remote to pi, terminal session)"
    echo "  [on MAC]  reboot   (remote to pi, reboot pi)"
    echo ""
    echo "  [on pi]   pi_install  (setup pi to run pi_play_loop)"
    echo "  [on pi]   pi_playloop (calls pi_play loop)"
    echo "  [on pi]   pi_playonce (calls pi_play once)"
    echo "  [on pi]   pi_kill     (kills vlc on pi)"
    echo ""
    ;;
  *)
    echo "not quite sure what to do. quitting"
    ;;
esac




